version: '3'

services:
    # Prometheus Installation
    prometheus:
        image: prom/prometheus
        container_name: prometheus
        privileged: true
        restart: unless-stopped
        volumes:
            - ./confs/prometheus.yml:/etc/prometheus/prometheus.yml
            - ./confs/alert.rules.yml:/etc/prometheus/alert.rules.yml
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
        ports:
            - '9090:9090'

    # Alertmanager
    alertmanager:
        image: prom/alertmanager
        container_name: alertmanager
        privileged: true
        restart: unless-stopped
        volumes:
            - ./confs/alertmanager.yml:/alertmanager.yml
        command:
            - '--config.file=/alertmanager.yml'
        ports:
            - '9093:9093'
    # Grafana
    grafana:
        image: grafana/grafana-enterprise
        container_name: grafana
        privileged: true
        restart: unless-stopped
        ports:
            - '3000:3000'
        volumes:
            - grafana-storage:/var/lib/grafana

    # Prometheus Ms-teams
    promteams:
        image: bzon/prometheus-msteams
        container_name: promteams
        privileged: true
        environment:
            - TEAMS_INCOMING_WEBHOOK_URL=webhookurl #Change this part with webhook url
            - TEAMS_REQUEST_URI=alertmanager
        ports:
            - '2000:2000'

    # Jaeger Installation
    jaeger-all-in-one:
        image: jaegertracing/all-in-one:latest
        container_name: jaeger
        ports:
        - "16686:16686"
        - "14268:14268"
        - "14250:14250"

    # Zipkin Installation
    zipkin-all-in-one:
        image: openzipkin/zipkin:latest
        container_name: zipkin
        ports:
        - "9411:9411"


    # Collector
    otel-collector:
        image: otel/opentelemetry-collector-contrib-dev:latest
        container_name: otel-collector
        command: ["--config=/etc/otel-collector-config.yaml", ""]
        volumes:
        - ./confs/otel-collector-config.yaml:/etc/otel-collector-config.yaml
        ports:
        - "1888:1888"   # pprof extension
        - "8888:8888"   # Prometheus metrics exposed by the collector
        - "8889:8889"   # Prometheus exporter metrics
        - "13133:13133" # health_check extension
        - "4317:4317"   # OTLP gRPC receiver
        - "4318:4318"   # OTLP gRPC receiver
        - "55679:55679" # zpages extension
        depends_on:
        - jaeger-all-in-one
        - zipkin-all-in-one

    # Demo client to use as the request generator
    demo-client:
        build:
          dockerfile: Dockerfile
          context: ./demo/client
        image: demo-client
        container_name: obs-demo-client
        environment:
        - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
        - DEMO_SERVER_ENDPOINT=http://demo-server:7080/hello
        depends_on:
        - demo-server

    # Demo server htat reposnds to client and being traced by the otel collector
    demo-server:
        build:
          dockerfile: Dockerfile
          context: ./demo/server
        image: demo-server
        container_name: obs-demo-server
        environment:
        - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
        ports:
        - "7080"
        depends_on:
        - otel-collector

volumes:
  grafana-storage:
